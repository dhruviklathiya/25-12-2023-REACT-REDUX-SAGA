{"ast":null,"code":"import { call, put } from \"redux-saga/effects\";\nimport { get_viewer_api, post_viewer_api } from \"../../viewer/api/viewerapi\";\nimport { GET_VIEWER_ERROR, GET_VIEWER_SUCCESS, POST_VIEWER_ERROR, POST_VIEWER_SUCCESS } from \"../../viewer/action/viewaction\";\nexport function* get_viewer_handler() {\n  try {\n    console.log(\"{========================}\");\n    const res = yield call(get_viewer_api);\n    const status = res.status;\n    const data = res.data;\n    if (status === 200 || status === 201) {\n      yield put({\n        type: GET_VIEWER_SUCCESS,\n        data\n      });\n    } else {\n      yield put({\n        type: GET_VIEWER_ERROR,\n        data\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function* post_viewer_handler() {\n  try {\n    console.log(\"{========================}\");\n    const res = yield call(post_viewer_handler);\n    const status = res.status;\n    const data = res.data;\n    if (status === 200 || status === 201) {\n      yield put({\n        type: POST_VIEWER_SUCCESS,\n        data\n      });\n    } else {\n      yield put({\n        type: POST_VIEWER_ERROR,\n        data\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}","map":{"version":3,"names":["call","put","get_viewer_api","post_viewer_api","GET_VIEWER_ERROR","GET_VIEWER_SUCCESS","POST_VIEWER_ERROR","POST_VIEWER_SUCCESS","get_viewer_handler","console","log","res","status","data","type","error","post_viewer_handler"],"sources":["/Users/dhruviklathiya/Desktop/D CODER/09 React js/Project_practice/25-12-2023-REACT-REDUX-SAGA/src/redux-saga/saga/viewer/viewersaga.js"],"sourcesContent":["import { call, put } from \"redux-saga/effects\";\nimport { get_viewer_api, post_viewer_api } from \"../../viewer/api/viewerapi\";\nimport { GET_VIEWER_ERROR, GET_VIEWER_SUCCESS, POST_VIEWER_ERROR, POST_VIEWER_SUCCESS } from \"../../viewer/action/viewaction\";\n\n\nexport function* get_viewer_handler (){\n    try {\n        console.log(\"{========================}\");\n        const res = yield call(get_viewer_api)\n        const status = res.status\n        const data = res.data\n        if(status === 200 || status === 201){\n            yield put({type:GET_VIEWER_SUCCESS,data})\n        }\n        else{\n            yield put({type:GET_VIEWER_ERROR,data})\n        }\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function* post_viewer_handler (){\n    try {\n        console.log(\"{========================}\");\n        const res = yield call(post_viewer_handler)\n        const status = res.status\n        const data = res.data\n        if(status === 200 || status === 201){\n            yield put({type:POST_VIEWER_SUCCESS,data})\n        }\n        else{\n            yield put({type:POST_VIEWER_ERROR,data})\n        }\n    } catch (error) {\n        console.log(error);\n    }\n}"],"mappings":"AAAA,SAASA,IAAI,EAAEC,GAAG,QAAQ,oBAAoB;AAC9C,SAASC,cAAc,EAAEC,eAAe,QAAQ,4BAA4B;AAC5E,SAASC,gBAAgB,EAAEC,kBAAkB,EAAEC,iBAAiB,EAAEC,mBAAmB,QAAQ,gCAAgC;AAG7H,OAAO,UAAUC,kBAAkBA,CAAA,EAAG;EAClC,IAAI;IACAC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IACzC,MAAMC,GAAG,GAAG,MAAMX,IAAI,CAACE,cAAc,CAAC;IACtC,MAAMU,MAAM,GAAGD,GAAG,CAACC,MAAM;IACzB,MAAMC,IAAI,GAAGF,GAAG,CAACE,IAAI;IACrB,IAAGD,MAAM,KAAK,GAAG,IAAIA,MAAM,KAAK,GAAG,EAAC;MAChC,MAAMX,GAAG,CAAC;QAACa,IAAI,EAACT,kBAAkB;QAACQ;MAAI,CAAC,CAAC;IAC7C,CAAC,MACG;MACA,MAAMZ,GAAG,CAAC;QAACa,IAAI,EAACV,gBAAgB;QAACS;MAAI,CAAC,CAAC;IAC3C;EACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZN,OAAO,CAACC,GAAG,CAACK,KAAK,CAAC;EACtB;AACJ;AAEA,OAAO,UAAUC,mBAAmBA,CAAA,EAAG;EACnC,IAAI;IACAP,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IACzC,MAAMC,GAAG,GAAG,MAAMX,IAAI,CAACgB,mBAAmB,CAAC;IAC3C,MAAMJ,MAAM,GAAGD,GAAG,CAACC,MAAM;IACzB,MAAMC,IAAI,GAAGF,GAAG,CAACE,IAAI;IACrB,IAAGD,MAAM,KAAK,GAAG,IAAIA,MAAM,KAAK,GAAG,EAAC;MAChC,MAAMX,GAAG,CAAC;QAACa,IAAI,EAACP,mBAAmB;QAACM;MAAI,CAAC,CAAC;IAC9C,CAAC,MACG;MACA,MAAMZ,GAAG,CAAC;QAACa,IAAI,EAACR,iBAAiB;QAACO;MAAI,CAAC,CAAC;IAC5C;EACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZN,OAAO,CAACC,GAAG,CAACK,KAAK,CAAC;EACtB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}