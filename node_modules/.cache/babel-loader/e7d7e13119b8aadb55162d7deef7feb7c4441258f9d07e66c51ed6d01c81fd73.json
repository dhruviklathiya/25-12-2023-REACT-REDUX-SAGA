{"ast":null,"code":"var _jsxFileName = \"/Users/dhruviklathiya/Desktop/D CODER/09 React js/Project_practice/25-12-2023-REACT-REDUX-SAGA/src/App.js\",\n  _s = $RefreshSig$();\nimport { Provider, useDispatch, useSelector } from \"react-redux\";\nimport { GET_PRODUCT_PROCESS } from \"./redux-saga/admin/action/action\";\nimport { useEffect, useRef } from \"react\";\nimport { DELETE_VIEWER_PROCESS, GET_VIEWER_PROCESS, POST_VIEWER_PROCESS } from \"./redux-saga/viewer/action/viewaction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _abc$viewer_data, _abc$mydata;\n  const username = useRef();\n  const password = useRef();\n  const abc = useSelector(state => state.viewer_reducer);\n  // const abc = useSelector((state) => state.product_reducer)\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch({\n      type: GET_VIEWER_PROCESS\n    });\n  }, []);\n  const submit_handler = () => {\n    const input = {\n      username: username.current.value,\n      password: password.current.value\n    };\n    dispatch({\n      type: POST_VIEWER_PROCESS,\n      payload: input\n    });\n  };\n  const handle_delete = val => {\n    dispatch({\n      type: DELETE_VIEWER_PROCESS,\n      payload: val.id\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"username\",\n      ref: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"password\",\n      ref: password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submit_handler,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), (_abc$viewer_data = abc.viewer_data) === null || _abc$viewer_data === void 0 ? void 0 : _abc$viewer_data.map(val => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Usernamee:\", val.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"password:\", val.password]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handle_delete(val),\n          children: \"DELETE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }), (_abc$mydata = abc.mydata) === null || _abc$mydata === void 0 ? void 0 : _abc$mydata.map(val => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: val\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    })]\n  }, void 0, true);\n}\n_s(App, \"73N9yYP5QAgdDEmCGE+EYVEVxUc=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Provider","useDispatch","useSelector","GET_PRODUCT_PROCESS","useEffect","useRef","DELETE_VIEWER_PROCESS","GET_VIEWER_PROCESS","POST_VIEWER_PROCESS","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","_abc$viewer_data","_abc$mydata","username","password","abc","state","viewer_reducer","dispatch","type","submit_handler","input","current","value","payload","handle_delete","val","id","children","name","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","viewer_data","map","mydata","_c","$RefreshReg$"],"sources":["/Users/dhruviklathiya/Desktop/D CODER/09 React js/Project_practice/25-12-2023-REACT-REDUX-SAGA/src/App.js"],"sourcesContent":["import { Provider, useDispatch, useSelector } from \"react-redux\";\nimport { GET_PRODUCT_PROCESS } from \"./redux-saga/admin/action/action\";\nimport { useEffect, useRef } from \"react\";\nimport { DELETE_VIEWER_PROCESS, GET_VIEWER_PROCESS, POST_VIEWER_PROCESS } from \"./redux-saga/viewer/action/viewaction\";\n\nfunction App() {\n  const username = useRef()\n  const password = useRef()\n  const abc = useSelector((state) => state.viewer_reducer)\n  // const abc = useSelector((state) => state.product_reducer)\n  const dispatch = useDispatch()\n  useEffect(()=>{\n    dispatch({type:GET_VIEWER_PROCESS})\n  },[])\n\n  const submit_handler = () => {\n    const input = {\n      username: username.current.value,\n      password: password.current.value\n    }\n    dispatch({type:POST_VIEWER_PROCESS, payload:input})\n  }\n\n  const handle_delete = (val) => {\n    dispatch({type:DELETE_VIEWER_PROCESS, payload:val.id})\n  }\n\n  return (\n    <>\n    <input name=\"username\" ref={username}/>\n    <input name=\"password\" ref={password}/>\n    <button onClick={submit_handler}>Submit</button>\n    {\n      abc.viewer_data?.map((val)=>{\n        return(\n          <>\n          <h1>Usernamee:{val.username}</h1>\n          <h1>password:{val.password}</h1>\n          <button onClick={()=>handle_delete(val)}>DELETE</button>\n          </>\n        )\n      })\n    }\n    {/* data to be when action is GET_PRODUCT_PROCESS */}\n    {\n      abc.mydata?.map((val)=>{\n        return(\n          <>\n          <h1>{val}</h1>\n          </>\n        )\n      })\n    }\n    </>\n  )\n\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAChE,SAASC,mBAAmB,QAAQ,kCAAkC;AACtE,SAASC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,SAASC,qBAAqB,EAAEC,kBAAkB,EAAEC,mBAAmB,QAAQ,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvH,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,gBAAA,EAAAC,WAAA;EACb,MAAMC,QAAQ,GAAGZ,MAAM,CAAC,CAAC;EACzB,MAAMa,QAAQ,GAAGb,MAAM,CAAC,CAAC;EACzB,MAAMc,GAAG,GAAGjB,WAAW,CAAEkB,KAAK,IAAKA,KAAK,CAACC,cAAc,CAAC;EACxD;EACA,MAAMC,QAAQ,GAAGrB,WAAW,CAAC,CAAC;EAC9BG,SAAS,CAAC,MAAI;IACZkB,QAAQ,CAAC;MAACC,IAAI,EAAChB;IAAkB,CAAC,CAAC;EACrC,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMiB,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,KAAK,GAAG;MACZR,QAAQ,EAAEA,QAAQ,CAACS,OAAO,CAACC,KAAK;MAChCT,QAAQ,EAAEA,QAAQ,CAACQ,OAAO,CAACC;IAC7B,CAAC;IACDL,QAAQ,CAAC;MAACC,IAAI,EAACf,mBAAmB;MAAEoB,OAAO,EAACH;IAAK,CAAC,CAAC;EACrD,CAAC;EAED,MAAMI,aAAa,GAAIC,GAAG,IAAK;IAC7BR,QAAQ,CAAC;MAACC,IAAI,EAACjB,qBAAqB;MAAEsB,OAAO,EAACE,GAAG,CAACC;IAAE,CAAC,CAAC;EACxD,CAAC;EAED,oBACErB,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBACAtB,OAAA;MAAOuB,IAAI,EAAC,UAAU;MAACC,GAAG,EAAEjB;IAAS;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACvC5B,OAAA;MAAOuB,IAAI,EAAC,UAAU;MAACC,GAAG,EAAEhB;IAAS;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACvC5B,OAAA;MAAQ6B,OAAO,EAAEf,cAAe;MAAAQ,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,GAAAvB,gBAAA,GAE9CI,GAAG,CAACqB,WAAW,cAAAzB,gBAAA,uBAAfA,gBAAA,CAAiB0B,GAAG,CAAEX,GAAG,IAAG;MAC1B,oBACEpB,OAAA,CAAAE,SAAA;QAAAoB,QAAA,gBACAtB,OAAA;UAAAsB,QAAA,GAAI,YAAU,EAACF,GAAG,CAACb,QAAQ;QAAA;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACjC5B,OAAA;UAAAsB,QAAA,GAAI,WAAS,EAACF,GAAG,CAACZ,QAAQ;QAAA;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAChC5B,OAAA;UAAQ6B,OAAO,EAAEA,CAAA,KAAIV,aAAa,CAACC,GAAG,CAAE;UAAAE,QAAA,EAAC;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,eACtD,CAAC;IAEP,CAAC,CAAC,GAAAtB,WAAA,GAIFG,GAAG,CAACuB,MAAM,cAAA1B,WAAA,uBAAVA,WAAA,CAAYyB,GAAG,CAAEX,GAAG,IAAG;MACrB,oBACEpB,OAAA,CAAAE,SAAA;QAAAoB,QAAA,eACAtB,OAAA;UAAAsB,QAAA,EAAKF;QAAG;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC,gBACZ,CAAC;IAEP,CAAC,CAAC;EAAA,eAEF,CAAC;AAGP;AAACxB,EAAA,CAnDQD,GAAG;EAAA,QAGEX,WAAW,EAEND,WAAW;AAAA;AAAA0C,EAAA,GALrB9B,GAAG;AAqDZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}